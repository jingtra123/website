---
interface Props {
  title: string;
  description: string;
  category: 'Workshop' | 'Tutorial' | 'Career' | 'Tool';
  level: 'Beginner' | 'Intermediate' | 'Advanced';
  author: string;
  tags: string[];
  slug: string;
}

const { title, description, category, level, author, tags, slug } = Astro.props;

const categoryColors = {
  Workshop: 'bg-purple-100 text-purple-800',
  Tutorial: 'bg-blue-100 text-blue-800',
  Career: 'bg-green-100 text-green-800',
  Tool: 'bg-orange-100 text-orange-800',
};

const levelColors = {
  Beginner: 'bg-green-100 text-green-700',
  Intermediate: 'bg-yellow-100 text-yellow-700',
  Advanced: 'bg-red-100 text-red-700',
};
---

<div class="card p-6 h-full flex flex-col">
  <div class="flex items-start justify-between mb-3">
    <div class="flex-1">
      <h3 class="text-xl font-bold text-gray-900 mb-2">
        <a href={`/resources/${slug}`} class="hover:text-primary-600 transition-colors">
          {title}
        </a>
      </h3>
      <div class="flex flex-wrap gap-2 mb-3">
        <span class={`px-2 py-1 text-xs font-semibold rounded ${categoryColors[category]}`}>
          {category}
        </span>
        <span class={`px-2 py-1 text-xs font-semibold rounded ${levelColors[level]}`}>
          {level}
        </span>
      </div>
    </div>
  </div>

  <p class="text-gray-600 mb-4 flex-1">{description}</p>

  <div class="mb-4">
    <div class="flex flex-wrap gap-2">
      {tags.map((tag) => (
        <span class="px-2 py-1 bg-gray-100 text-gray-600 text-xs rounded">
          #{tag}
        </span>
      ))}
    </div>
  </div>

  <div class="flex items-center justify-between mt-auto pt-4 border-t border-gray-200">
    <span class="text-sm text-gray-500">By {author}</span>
    <a
      href={`/resources/${slug}`}
      class="text-sm font-semibold text-primary-600 hover:text-primary-700 transition-colors"
    >
      Read More â†’
    </a>
  </div>
</div>
